// <auto-generated />
using System;
using ISTB.DataAccess.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ISTB.DataAccess.EF.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230613213513_Change string property to nullable string")]
    partial class Changestringpropertytonullablestring
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ISTB.DataAccess.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Owner"
                        });
                });

            modelBuilder.Entity("ISTB.DataAccess.Entities.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Schedule");
                });

            modelBuilder.Entity("ISTB.DataAccess.Entities.ScheduleDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageFileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Position")
                        .HasColumnType("bigint");

                    b.Property<int>("ScheduleWeekId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleWeekId");

                    b.ToTable("SchedulesDays");
                });

            modelBuilder.Entity("ISTB.DataAccess.Entities.ScheduleWeek", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long?>("Position")
                        .HasColumnType("bigint");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleId");

                    b.ToTable("SchedulesWeeks");
                });

            modelBuilder.Entity("ISTB.DataAccess.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("TelegramUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TelegramUserId")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ISTB.DataAccess.Entities.Role", b =>
                {
                    b.HasOne("ISTB.DataAccess.Entities.User", null)
                        .WithMany("Roles")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("ISTB.DataAccess.Entities.Schedule", b =>
                {
                    b.HasOne("ISTB.DataAccess.Entities.User", "User")
                        .WithMany("Groups")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ISTB.DataAccess.Entities.ScheduleDay", b =>
                {
                    b.HasOne("ISTB.DataAccess.Entities.ScheduleWeek", null)
                        .WithMany("Days")
                        .HasForeignKey("ScheduleWeekId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ISTB.DataAccess.Entities.ScheduleWeek", b =>
                {
                    b.HasOne("ISTB.DataAccess.Entities.Schedule", "Schedule")
                        .WithMany("Weeks")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("ISTB.DataAccess.Entities.Schedule", b =>
                {
                    b.Navigation("Weeks");
                });

            modelBuilder.Entity("ISTB.DataAccess.Entities.ScheduleWeek", b =>
                {
                    b.Navigation("Days");
                });

            modelBuilder.Entity("ISTB.DataAccess.Entities.User", b =>
                {
                    b.Navigation("Groups");

                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
